type ConcurrentERC20_Approval {
  id: ID!
  owner: String! @index
  spender: String! @index
  value: BigInt!
}

type ConcurrentERC20_Transfer {
  id: ID!
  from: String! @index
  to: String! @index
  value: BigInt!
}

type TicketingCore_EventCreated {
  id: ID!
  eventId: BigInt! @index
  name: String!
  venue: String!
  timestamp: BigInt!
  organizer: String! @index
  tierCount: BigInt!
}

type TicketingCore_RevenueWithdrawn {
  id: ID!
  eventId: BigInt! @index
  organizer: String! @index
  amount: BigInt!
}

type TicketingCore_TicketPurchased {
  id: ID!
  eventId: BigInt! @index
  tierIdx: BigInt! @index
  buyer: String! @index
  tokenId: BigInt! @index
  price: BigInt!
}

type TicketingCore_TicketRefunded {
  id: ID!
  eventId: BigInt! @index
  tierIdx: BigInt! @index
  buyer: String! @index
  tokenId: BigInt! @index
  refundAmount: BigInt!
}

# Derived Analytics Entities
# These are computed and maintained by event handlers for fast queries

type EventStats {
  id: ID!
  eventId: BigInt! @index
  totalPurchases: Int!
  totalRefunds: Int!
  totalRevenue: BigInt!
  totalRefundAmount: BigInt!
  netRevenue: BigInt!
  revenueWithdrawn: BigInt!
}

type TierStats {
  id: ID!
  eventId: BigInt! @index
  tierIdx: BigInt! @index
  soldCount: Int!
  purchaseCount: Int!
  refundCount: Int!
  totalRevenue: BigInt!
  totalRefundAmount: BigInt!
}

type UserStats {
  id: ID!
  address: String! @index
  totalTicketsPurchased: Int!
  totalTicketsRefunded: Int!
  activeTickets: Int!
  totalSpent: BigInt!
  totalRefunded: BigInt!
}

type OrganizerStats {
  id: ID!
  address: String! @index
  eventsCreated: Int!
  totalRevenue: BigInt!
  totalWithdrawn: BigInt!
}

type PlatformStats {
  id: ID!
  totalEvents: Int!
  totalTicketsSold: Int!
  totalRefunds: Int!
  totalRevenue: BigInt!
  totalRefundAmount: BigInt!
}
